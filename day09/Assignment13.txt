-- Create a union of two queries that shows the names, cities, and ratings of all
-- customers. Those with rating of 200 or greater will also have the words “High
-- Rating”, while the others will have the words “Low Rating”.

select cname, city, 'high'rating
from customers
where rating>=200

union

select cname, city, 'Low'rating
from customers
where rating < 200;

========================================================================================
-- 2) Write a command that produces the name and number of each salesperson and
-- each customer with more than one current order. Put the results in alphabetical
-- order.

(select s.snum, s.sname, count(o.odate)
from salespeople s, orders o
where s.snum=o.snum
group by s.snum
having count(o.odate)>1

union

select  c.cnum, c.cname, count(o.odate)
from  orders o, customers c
where c.cnum=o.cnum
group by c.cnum
having count(o.odate)>1) order by sname;


(select s.snum, s.sname, count(s.snum)
from salespeople s, orders o
where s.snum=o.snum
group by s.snum
having count(s.snum)>1

union

select  c.cnum, c.cname, count(c.cnum)
from  orders o, customers c
where c.cnum=o.cnum
group by c.cnum
having count(c.cnum)>1) order by sname;

========================================================================================
-- 3) Form a union of three queries. Have the first select the snums of all salespeople in
-- San Jose; the second, the cnums of all customers in San Jose; and the third the
-- onums of all orders on October 3. Retain duplicates between the last two queries
-- but eliminate any redundancies between either of them and the first.
-- (Note: in the sample tables as given, there would be no such redundancy. This is
-- besides the point.)

select snum
from salespeople 
where city='San Jose'

union

select cnum
from customers
where city='San Jose'

union all

select onum
from orders
where odate='1990-10-03';

